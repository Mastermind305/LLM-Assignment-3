# -*- coding: utf-8 -*-
"""RAG.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14qPJljX9fs7BrDLbtuHd-Uf5h_yHf-kN
"""

!pip install --upgrade datasets fsspec

# !pip install sentence-transformers faiss-cpu transformers gradio beautifulsoup4 requests

import requests
from bs4 import BeautifulSoup
from sentence_transformers import SentenceTransformer
from transformers import pipeline
import faiss
import numpy as np
import gradio as gr


# 2. Crawl Website Text

def crawl_website(url, max_paragraphs=50):
    response = requests.get(url)
    soup = BeautifulSoup(response.content, "html.parser")
    paragraphs = soup.find_all("p")
    text_data = [p.get_text().strip() for p in paragraphs if len(p.get_text().strip()) > 30]
    return "\n".join(text_data[:max_paragraphs])


# 3. Chunk Text

def chunk_text(text, chunk_size=500, overlap=50):
    chunks = []
    start = 0
    while start < len(text):
        end = start + chunk_size
        chunks.append(text[start:end])
        start += chunk_size - overlap
    return chunks


# 4. Build FAISS Index

def build_faiss(chunks, model):
    embeddings = model.encode(chunks, show_progress_bar=True)
    dimension = embeddings[0].shape[0]
    index = faiss.IndexFlatL2(dimension)
    index.add(np.array(embeddings))
    return index, embeddings


# 5. Retrieve Context

def retrieve_relevant_chunks(question, index, chunks, embed_model, top_k=5):
    q_embedding = embed_model.encode([question])
    D, I = index.search(np.array(q_embedding), top_k)
    retrieved = [chunks[i] for i in I[0]]
    return "\n".join(retrieved)


# 6. Setup QA Model
qa_pipeline = pipeline("text2text-generation", model="facebook/bart-large")
embed_model = SentenceTransformer("all-MiniLM-L6-v2")


# 7. QA Function (Shared by CLI and Gradio)

def answer_question(url, question):
    text = crawl_website(url)
    chunks = chunk_text(text)
    index, _ = build_faiss(chunks, embed_model)
    context = retrieve_relevant_chunks(question, index, chunks, embed_model)
    prompt = f"Answer the question based on the context.\nContext: {context}\n\nQuestion: {question}"
    result = qa_pipeline(prompt, max_length=128, do_sample=False)
    return result[0]['generated_text']


# 8. Gradio Interface
demo = gr.Interface(
    fn=answer_question,
    inputs=[
        gr.Textbox(label="Enter Wikipedia URL", value="https://en.wikipedia.org/wiki/SpaceX"),
        gr.Textbox(label="Your Question")
    ],
    outputs="text",
    title="RAG-style QA with Wikipedia",
    description="Crawl Wikipedia, embed text, retrieve relevant info using FAISS, and generate an answer using BART."
)


demo.launch()

from datasets import load_dataset

dataset = load_dataset("trivia_qa", "unfiltered", split="validation[:10]")  # 10 samples for speed

results = []

for sample in dataset:
    question = sample["question"]
    reference = sample["answer"]["value"]
    answer = answer_question("https://en.wikipedia.org/wiki/SpaceX", question)
    results.append((question, reference, answer))

!pip install rouge-score

from rouge_score import rouge_scorer
from nltk.translate.bleu_score import sentence_bleu, SmoothingFunction
import numpy as np

# Your existing answer_question() function
# def answer_question(document_url, question):
#     # Your QA inference code here
#     return predicted_answer

spacex_qa = [
    {"question": "When was SpaceX founded?",
     "answer": "SpaceX was founded in 2002 by Elon Musk."},

    {"question": "What is the Falcon 9 rocket?",
     "answer": "Falcon 9 is a two-stage rocket developed by SpaceX for reliable transport of satellites and crew."},

    {"question": "What is the goal of the Starship spacecraft?",
     "answer": "Starship aims to provide fully reusable transportation for missions to Earth orbit, the Moon, Mars, and beyond."},

    {"question": "Who is the founder of SpaceX?",
     "answer": "Elon Musk is the founder of SpaceX."},

    {"question": "What was the first privately developed spacecraft to reach orbit?",
     "answer": "Falcon 1 was the first privately developed liquid-fueled rocket to reach orbit."},

    {"question": "What is the name of SpaceX’s crewed spacecraft?",
     "answer": "The Dragon 2 or Crew Dragon spacecraft is used to carry astronauts to the ISS."},

    {"question": "When did SpaceX first land a rocket vertically?",
     "answer": "SpaceX first landed Falcon 9’s first stage vertically in December 2015."},

    {"question": "What is Starlink?",
     "answer": "Starlink is SpaceX’s satellite constellation project to provide global broadband internet."},

    {"question": "What is Falcon Heavy?",
     "answer": "Falcon Heavy is SpaceX’s heavy-lift launch vehicle, capable of carrying large payloads to orbit."},

    {"question": "What was the first payload launched by Falcon Heavy?",
     "answer": "Elon Musk’s Tesla Roadster was the first payload on Falcon Heavy’s maiden flight in 2018."},

    {"question": "Where is SpaceX headquarters located?",
     "answer": "SpaceX headquarters is in Hawthorne, California."},

    {"question": "What is the main goal of SpaceX?",
     "answer": "SpaceX’s main goal is to reduce space transportation costs and enable Mars colonization."},

    {"question": "What launch facility does SpaceX use in Florida?",
     "answer": "SpaceX uses Kennedy Space Center’s Launch Complex 39A."},

    {"question": "What is the difference between Falcon 1 and Falcon 9?",
     "answer": "Falcon 1 is a small rocket, while Falcon 9 is a larger, reusable two-stage rocket."},

    {"question": "What type of engines power Falcon 9?",
     "answer": "Falcon 9 uses nine Merlin engines on its first stage."},

    {"question": "What is the Dragon spacecraft used for?",
     "answer": "Dragon carries cargo and crew to the International Space Station."},

    {"question": "How does SpaceX achieve rocket reusability?",
     "answer": "By landing and refurbishing the first stage boosters for multiple flights."},

    {"question": "What is the significance of the Demo-2 mission?",
     "answer": "Demo-2 was the first crewed orbital launch from U.S. soil since 2011, flown by SpaceX."},

    {"question": "How many Starlink satellites does SpaceX plan to deploy?",
     "answer": "SpaceX plans to deploy thousands of Starlink satellites for global coverage."},

    {"question": "What is the expected payload capacity of Starship?",
     "answer": "Starship is designed to carry over 100 metric tons to Earth orbit."},

    {"question": "What fuels are used by Falcon 9?",
     "answer": "Falcon 9 uses RP-1 (rocket-grade kerosene) and liquid oxygen (LOX)."},

    {"question": "What year did SpaceX send cargo to the ISS for the first time?",
     "answer": "SpaceX first sent cargo to the ISS in 2012 with the Dragon spacecraft."},

    {"question": "What are the stages of Falcon 9?",
     "answer": "Falcon 9 has two stages: the reusable first stage and the second stage for payload deployment."},

    {"question": "What safety feature does Crew Dragon include?",
     "answer": "Crew Dragon includes an integrated launch escape system for astronaut safety."},

    {"question": "What does Raptor engine power?",
     "answer": "The Raptor engine powers the Starship spacecraft using methane and liquid oxygen."},

    {"question": "What is the difference between Dragon 1 and Dragon 2?",
     "answer": "Dragon 1 was cargo-only; Dragon 2 supports both cargo and crewed missions."},

    {"question": "What is the goal of Mars colonization for SpaceX?",
     "answer": "SpaceX aims to build a self-sustaining city on Mars to ensure humanity’s multi-planetary future."},

    {"question": "What is the significance of the Falcon 9 booster B1049?",
     "answer": "B1049 was the first booster to fly 10 missions, demonstrating rapid reusability."},

    {"question": "What is the launch cadence goal of Starship?",
     "answer": "SpaceX aims for a rapid Starship launch cadence to make space access affordable."},

    {"question": "How does Starlink benefit remote areas?",
     "answer": "Starlink provides high-speed internet to rural and remote areas with limited connectivity."},

    {"question": "What is the diameter of Starship?",
     "answer": "Starship has a diameter of approximately 9 meters."},

    {"question": "Which NASA program contracts SpaceX for lunar missions?",
     "answer": "NASA’s Artemis program contracts SpaceX for lunar lander development."},

    {"question": "What is the launch escape system used in Crew Dragon called?",
     "answer": "It is called the SuperDraco abort system."},

    {"question": "What milestone did SpaceX achieve with CRS-1 mission?",
     "answer": "CRS-1 was the first commercial cargo resupply mission to the ISS."},

    {"question": "How many Merlin engines are on the Falcon Heavy central core?",
     "answer": "The central core has nine Merlin engines, same as Falcon 9 first stage."},

    {"question": "What does the acronym 'RAG' stand for in NLP systems?",
     "answer": "RAG stands for Retrieval-Augmented Generation."},

    {"question": "What year did SpaceX launch its first Starlink satellites?",
     "answer": "SpaceX launched its first Starlink batch in 2019."},

    {"question": "What is the payload capacity of Falcon Heavy to low Earth orbit?",
     "answer": "Falcon Heavy can carry approximately 63,800 kilograms to low Earth orbit."},

    {"question": "What is the main material used to build Starship?",
     "answer": "Starship is primarily built from stainless steel."},

    {"question": "What role does SpaceX play in NASA's Commercial Crew Program?",
     "answer": "SpaceX provides crew transportation services to the ISS using Crew Dragon."},

    {"question": "How does SpaceX plan to reduce launch costs?",
     "answer": "By reusing rockets and developing fully reusable spacecraft like Starship."},

    {"question": "What is the name of the booster recovery ships used by SpaceX?",
     "answer": "The ships are named 'Of Course I Still Love You' and 'Just Read The Instructions'."},

    {"question": "What is unique about the Falcon 1 rocket?",
     "answer": "Falcon 1 was the first privately developed liquid-fueled rocket to reach orbit."},

    {"question": "What is the significance of the Inspiration4 mission?",
     "answer": "It was the first all-civilian orbital spaceflight mission by SpaceX."},

    {"question": "How does SpaceX’s Raptor engine differ from Merlin?",
     "answer": "Raptor uses methane fuel and is designed for Starship; Merlin uses RP-1 kerosene for Falcon rockets."},

    {"question": "What is the name of the SpaceX project aiming for global internet?",
     "answer": "The project is called Starlink."},

    {"question": "What type of landing does Falcon 9’s first stage perform?",
     "answer": "It performs vertical landing using landing legs and grid fins."},

    {"question": "What is the role of grid fins on Falcon 9?",
     "answer": "Grid fins steer the rocket during descent for controlled landing."},

    {"question": "What is the capacity of Crew Dragon in terms of astronauts?",
     "answer": "Crew Dragon can carry up to seven astronauts."},

    {"question": "Which SpaceX vehicle was used to launch the Demo-2 mission?",
     "answer": "The Crew Dragon spacecraft launched aboard Falcon 9 for Demo-2."},

    {"question": "What does the term 'reusability' mean in the context of SpaceX?",
     "answer": "It means flying the same rocket boosters multiple times to reduce cost."}
]

# Initialize scorers
rouge = rouge_scorer.RougeScorer(['rouge1', 'rouge2', 'rougeL'], use_stemmer=True)
smoothie = SmoothingFunction().method4

def evaluate(pred, ref):
    r_scores = rouge.score(pred, ref)
    bleu = sentence_bleu([ref.split()], pred.split(), smoothing_function=smoothie)
    return {
        "rouge1": r_scores["rouge1"].fmeasure,
        "rouge2": r_scores["rouge2"].fmeasure,
        "rougeL": r_scores["rougeL"].fmeasure,
        "bleu": bleu
    }

results = []
spaceX_wiki = "https://en.wikipedia.org/wiki/SpaceX"

for qa in spacex_qa:
    question = qa["question"]
    reference = qa["answer"]
    answer = answer_question(spaceX_wiki, question)  # Your QA function here
    results.append((question, reference, answer))

# Evaluate all predictions
scores = [evaluate(pred, ref) for _, ref, pred in results]

# Print & analyze results
for i, (q, ref, pred) in enumerate(results):
    print(f"Q{i+1}: {q}")
    print(f"✅ Ground Truth: {ref}")
    print(f"🤖 Prediction: {pred}")
    print(f"📊 Scores: {scores[i]}")
    print("-" * 60)

# Average scores
avg_scores = {k: np.mean([s[k] for s in scores]) for k in scores[0]}
print("📈 Average Scores:")
print(avg_scores)



